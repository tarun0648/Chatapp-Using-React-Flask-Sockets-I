{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarun\\\\Downloads\\\\chatappfinal\\\\chat-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/context/AuthContext.js - FIXED LOGOUT WITH SOCKET CLEANUP\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { disconnectSocket, getSocket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        await loadUserProfile(token);\n      } catch (error) {\n        console.error('Failed to load profile:', error);\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    }\n    setLoading(false);\n  };\n  const loadUserProfile = async token => {\n    try {\n      const response = await api.getProfile(token);\n      if (response.success) {\n        setUser(response.data);\n        setIsAuthenticated(true);\n      } else {\n        throw new Error('Failed to get profile');\n      }\n    } catch (error) {\n      console.error('Profile load error:', error);\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n      setUser(null);\n      throw error;\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await api.login(credentials);\n      if (response.success && response.token) {\n        localStorage.setItem('token', response.token);\n        await loadUserProfile(response.token);\n        return response;\n      } else {\n        throw new Error(response.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await api.signup(userData);\n      return response;\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error;\n    }\n  };\n\n  // ✅ FIXED: Enhanced logout with proper socket cleanup\n  const logout = async () => {\n    try {\n      console.log('🚪 Starting logout process...');\n\n      // 1. Get current socket before cleanup\n      const socket = getSocket();\n\n      // 2. Emit logout event to server BEFORE disconnecting\n      if (socket && socket.connected && user) {\n        console.log('📤 Emitting logout event for user:', user.id);\n        socket.emit('user_logout', {\n          user_id: user.id\n        });\n\n        // Give server time to process logout\n        await new Promise(resolve => setTimeout(resolve, 500));\n      }\n\n      // 3. Call API logout endpoint (if you have one)\n      if (user) {\n        try {\n          await api.logout(user.id);\n        } catch (error) {\n          console.error('API logout error:', error);\n          // Continue with logout even if API call fails\n        }\n      }\n\n      // 4. Disconnect socket\n      console.log('🔌 Disconnecting socket...');\n      disconnectSocket();\n\n      // 5. Clear local storage and state\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n      console.log('✅ Logout completed successfully');\n    } catch (error) {\n      console.error('❌ Logout error:', error);\n      // Force logout even if there are errors\n      disconnectSocket();\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const updateUser = updatedData => {\n    setUser(prev => ({\n      ...prev,\n      ...updatedData\n    }));\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","disconnectSocket","getSocket","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuthStatus","token","localStorage","getItem","loadUserProfile","error","console","removeItem","response","getProfile","success","data","login","credentials","setItem","message","signup","userData","logout","log","socket","connected","id","emit","user_id","Promise","resolve","setTimeout","updateUser","updatedData","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tarun/Downloads/chatappfinal/chat-frontend/src/context/AuthContext.js"],"sourcesContent":["// frontend/src/context/AuthContext.js - FIXED LOGOUT WITH SOCKET CLEANUP\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\nimport { disconnectSocket, getSocket } from '../services/socket';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (token) {\r\n      try {\r\n        await loadUserProfile(token);\r\n      } catch (error) {\r\n        console.error('Failed to load profile:', error);\r\n        localStorage.removeItem('token');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const loadUserProfile = async (token) => {\r\n    try {\r\n      const response = await api.getProfile(token);\r\n      if (response.success) {\r\n        setUser(response.data);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        throw new Error('Failed to get profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile load error:', error);\r\n      localStorage.removeItem('token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await api.login(credentials);\r\n      if (response.success && response.token) {\r\n        localStorage.setItem('token', response.token);\r\n        await loadUserProfile(response.token);\r\n        return response;\r\n      } else {\r\n        throw new Error(response.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const response = await api.signup(userData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // ✅ FIXED: Enhanced logout with proper socket cleanup\r\n  const logout = async () => {\r\n    try {\r\n      console.log('🚪 Starting logout process...');\r\n      \r\n      // 1. Get current socket before cleanup\r\n      const socket = getSocket();\r\n      \r\n      // 2. Emit logout event to server BEFORE disconnecting\r\n      if (socket && socket.connected && user) {\r\n        console.log('📤 Emitting logout event for user:', user.id);\r\n        socket.emit('user_logout', { user_id: user.id });\r\n        \r\n        // Give server time to process logout\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n      }\r\n      \r\n      // 3. Call API logout endpoint (if you have one)\r\n      if (user) {\r\n        try {\r\n          await api.logout(user.id);\r\n        } catch (error) {\r\n          console.error('API logout error:', error);\r\n          // Continue with logout even if API call fails\r\n        }\r\n      }\r\n      \r\n      // 4. Disconnect socket\r\n      console.log('🔌 Disconnecting socket...');\r\n      disconnectSocket();\r\n      \r\n      // 5. Clear local storage and state\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      \r\n      console.log('✅ Logout completed successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Logout error:', error);\r\n      // Force logout even if there are errors\r\n      disconnectSocket();\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedData) => {\r\n    setUser(prev => ({ ...prev, ...updatedData }));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
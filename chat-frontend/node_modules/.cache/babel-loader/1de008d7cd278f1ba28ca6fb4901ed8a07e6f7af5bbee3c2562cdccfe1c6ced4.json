{"ast":null,"code":"import { io } from 'socket.io-client';\nlet socket = null;\nexport const initSocket = () => {\n  if (!socket || socket.disconnected) {\n    socket = io('http://localhost:5000', {\n      autoConnect: false,\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 20000,\n      forceNew: false\n    });\n    socket.on('connect', () => {\n      console.log('Socket connected:', socket.id);\n    });\n    socket.on('disconnect', reason => {\n      console.log('Socket disconnected:', reason);\n      if (reason === 'io server disconnect') {\n        // the disconnection was initiated by the server, reconnect manually\n        socket.connect();\n      }\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n    });\n    socket.on('reconnect', attemptNumber => {\n      console.log('Socket reconnected after', attemptNumber, 'attempts');\n    });\n    socket.on('reconnect_error', error => {\n      console.error('Socket reconnection error:', error);\n    });\n    socket.on('reconnect_failed', () => {\n      console.error('Socket reconnection failed');\n    });\n  }\n  return socket;\n};\nexport const getSocket = () => {\n  if (!socket) {\n    return initSocket();\n  }\n  return socket;\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};\nexport const connectSocket = () => {\n  if (socket && !socket.connected) {\n    socket.connect();\n  }\n};\nexport const isSocketConnected = () => {\n  return socket && socket.connected;\n};","map":{"version":3,"names":["io","socket","initSocket","disconnected","autoConnect","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","forceNew","on","console","log","id","reason","connect","error","attemptNumber","getSocket","disconnectSocket","disconnect","connectSocket","connected","isSocketConnected"],"sources":["C:/Users/tarun/Downloads/chatappfinal/chat-frontend/src/services/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nlet socket = null;\r\n\r\nexport const initSocket = () => {\r\n  if (!socket || socket.disconnected) {\r\n    socket = io('http://localhost:5000', {\r\n      autoConnect: false,\r\n      transports: ['websocket', 'polling'],\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 20000,\r\n      forceNew: false,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Socket connected:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('Socket disconnected:', reason);\r\n      if (reason === 'io server disconnect') {\r\n        // the disconnection was initiated by the server, reconnect manually\r\n        socket.connect();\r\n      }\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n    });\r\n\r\n    socket.on('reconnect', (attemptNumber) => {\r\n      console.log('Socket reconnected after', attemptNumber, 'attempts');\r\n    });\r\n\r\n    socket.on('reconnect_error', (error) => {\r\n      console.error('Socket reconnection error:', error);\r\n    });\r\n\r\n    socket.on('reconnect_failed', () => {\r\n      console.error('Socket reconnection failed');\r\n    });\r\n  }\r\n  \r\n  return socket;\r\n};\r\n\r\nexport const getSocket = () => {\r\n  if (!socket) {\r\n    return initSocket();\r\n  }\r\n  return socket;\r\n};\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};\r\n\r\nexport const connectSocket = () => {\r\n  if (socket && !socket.connected) {\r\n    socket.connect();\r\n  }\r\n};\r\n\r\nexport const isSocketConnected = () => {\r\n  return socket && socket.connected;\r\n};"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAIC,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,YAAY,EAAE;IAClCF,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;MACnCI,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEFT,MAAM,CAACU,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEZ,MAAM,CAACa,EAAE,CAAC;IAC7C,CAAC,CAAC;IAEFb,MAAM,CAACU,EAAE,CAAC,YAAY,EAAGI,MAAM,IAAK;MAClCH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,MAAM,CAAC;MAC3C,IAAIA,MAAM,KAAK,sBAAsB,EAAE;QACrC;QACAd,MAAM,CAACe,OAAO,CAAC,CAAC;MAClB;IACF,CAAC,CAAC;IAEFf,MAAM,CAACU,EAAE,CAAC,eAAe,EAAGM,KAAK,IAAK;MACpCL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;IAEFhB,MAAM,CAACU,EAAE,CAAC,WAAW,EAAGO,aAAa,IAAK;MACxCN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,aAAa,EAAE,UAAU,CAAC;IACpE,CAAC,CAAC;IAEFjB,MAAM,CAACU,EAAE,CAAC,iBAAiB,EAAGM,KAAK,IAAK;MACtCL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;IAEFhB,MAAM,CAACU,EAAE,CAAC,kBAAkB,EAAE,MAAM;MAClCC,OAAO,CAACK,KAAK,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEA,OAAOhB,MAAM;AACf,CAAC;AAED,OAAO,MAAMkB,SAAS,GAAGA,CAAA,KAAM;EAC7B,IAAI,CAAClB,MAAM,EAAE;IACX,OAAOC,UAAU,CAAC,CAAC;EACrB;EACA,OAAOD,MAAM;AACf,CAAC;AAED,OAAO,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAInB,MAAM,EAAE;IACVA,MAAM,CAACoB,UAAU,CAAC,CAAC;IACnBpB,MAAM,GAAG,IAAI;EACf;AACF,CAAC;AAED,OAAO,MAAMqB,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAIrB,MAAM,IAAI,CAACA,MAAM,CAACsB,SAAS,EAAE;IAC/BtB,MAAM,CAACe,OAAO,CAAC,CAAC;EAClB;AACF,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAOvB,MAAM,IAAIA,MAAM,CAACsB,SAAS;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
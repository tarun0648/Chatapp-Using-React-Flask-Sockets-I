{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarun\\\\Downloads\\\\chatappfinal\\\\chat-frontend\\\\src\\\\components\\\\chat\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst ChatRoom = ({\n  selectedUser\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (selectedUser) {\n        const response = await api.getMessages(selectedUser.id);\n        if (response.success) {\n          setMessages(response.data);\n        }\n      }\n    };\n    fetchMessages();\n  }, [selectedUser]);\n  useEffect(() => {\n    socket.on('receive_message', newMessage => {\n      if (newMessage.sender_id === selectedUser.id || newMessage.receiver_id === selectedUser.id) {\n        setMessages(prev => [...prev, newMessage]);\n      }\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [selectedUser]);\n  const sendMessage = async () => {\n    if (message.trim() && selectedUser) {\n      const newMsg = {\n        sender_id: user.id,\n        receiver_id: selectedUser.id,\n        content: message\n      };\n      const response = await api.sendMessage(newMsg);\n      if (response.success) {\n        socket.emit('send_message', response.data);\n        setMessages([...messages, response.data]);\n        setMessage('');\n      }\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: [\"Chat with \", selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages h-80 overflow-y-scroll border p-2 rounded\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 my-1 rounded ${msg.sender_id === user.id ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'}`,\n        children: msg.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"flex-1 border rounded p-2\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"ml-2 px-4 py-2 bg-blue-600 text-white rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"vEkrODfVsWC2p0p7V1OC0Wuhzjg=\", false, function () {\n  return [useAuth];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","api","useAuth","jsxDEV","_jsxDEV","socket","ChatRoom","selectedUser","_s","user","messages","setMessages","message","setMessage","messagesEndRef","fetchMessages","response","getMessages","id","success","data","on","newMessage","sender_id","receiver_id","prev","off","sendMessage","trim","newMsg","content","emit","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","ref","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tarun/Downloads/chatappfinal/chat-frontend/src/components/chat/ChatRoom.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport api from '../../services/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ChatRoom = ({ selectedUser }) => {\r\n  const { user } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      if (selectedUser) {\r\n        const response = await api.getMessages(selectedUser.id);\r\n        if (response.success) {\r\n          setMessages(response.data);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [selectedUser]);\r\n\r\n  useEffect(() => {\r\n    socket.on('receive_message', (newMessage) => {\r\n      if (newMessage.sender_id === selectedUser.id || newMessage.receiver_id === selectedUser.id) {\r\n        setMessages(prev => [...prev, newMessage]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receive_message');\r\n    };\r\n  }, [selectedUser]);\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() && selectedUser) {\r\n      const newMsg = {\r\n        sender_id: user.id,\r\n        receiver_id: selectedUser.id,\r\n        content: message\r\n      };\r\n      const response = await api.sendMessage(newMsg);\r\n      if (response.success) {\r\n        socket.emit('send_message', response.data);\r\n        setMessages([...messages, response.data]);\r\n        setMessage('');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-room\">\r\n      <h3 className=\"text-xl font-semibold mb-2\">Chat with {selectedUser?.name}</h3>\r\n      <div className=\"chat-messages h-80 overflow-y-scroll border p-2 rounded\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`p-2 my-1 rounded ${\r\n              msg.sender_id === user.id ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'\r\n            }`}\r\n          >\r\n            {msg.content}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"flex mt-2\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          className=\"flex-1 border rounded p-2\"\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={sendMessage} className=\"ml-2 px-4 py-2 bg-blue-600 text-white rounded\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { io } from 'socket.io-client';\nlet socket = null;\nexport const initSocket = () => {\n  if (!socket || socket.disconnected) {\n    socket = io('http://localhost:5000', {\n      autoConnect: false,\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      timeout: 20000\n    });\n    socket.on('connect', () => {\n      console.log('Socket connected:', socket.id);\n    });\n    socket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n    });\n    socket.on('reconnect', () => {\n      console.log('Socket reconnected');\n    });\n  }\n  return socket;\n};\nexport const getSocket = () => {\n  if (!socket) {\n    return initSocket();\n  }\n  return socket;\n};\nexport const disconnectSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n  }\n};","map":{"version":3,"names":["io","socket","initSocket","disconnected","autoConnect","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","on","console","log","id","error","getSocket","disconnectSocket","disconnect"],"sources":["C:/Users/tarun/Downloads/chatappfinal/chat-frontend/src/services/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nlet socket = null;\r\n\r\nexport const initSocket = () => {\r\n  if (!socket || socket.disconnected) {\r\n    socket = io('http://localhost:5000', {\r\n      autoConnect: false,\r\n      transports: ['websocket', 'polling'],\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      timeout: 20000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Socket connected:', socket.id);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      console.log('Socket reconnected');\r\n    });\r\n  }\r\n  \r\n  return socket;\r\n};\r\n\r\nexport const getSocket = () => {\r\n  if (!socket) {\r\n    return initSocket();\r\n  }\r\n  return socket;\r\n};\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAIC,MAAM,GAAG,IAAI;AAEjB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,YAAY,EAAE;IAClCF,MAAM,GAAGD,EAAE,CAAC,uBAAuB,EAAE;MACnCI,WAAW,EAAE,KAAK;MAClBC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFR,MAAM,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEX,MAAM,CAACY,EAAE,CAAC;IAC7C,CAAC,CAAC;IAEFZ,MAAM,CAACS,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFX,MAAM,CAACS,EAAE,CAAC,eAAe,EAAGI,KAAK,IAAK;MACpCH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;IAEFb,MAAM,CAACS,EAAE,CAAC,WAAW,EAAE,MAAM;MAC3BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC,CAAC,CAAC;EACJ;EAEA,OAAOX,MAAM;AACf,CAAC;AAED,OAAO,MAAMc,SAAS,GAAGA,CAAA,KAAM;EAC7B,IAAI,CAACd,MAAM,EAAE;IACX,OAAOC,UAAU,CAAC,CAAC;EACrB;EACA,OAAOD,MAAM;AACf,CAAC;AAED,OAAO,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAIf,MAAM,EAAE;IACVA,MAAM,CAACgB,UAAU,CAAC,CAAC;IACnBhB,MAAM,GAAG,IAAI;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}